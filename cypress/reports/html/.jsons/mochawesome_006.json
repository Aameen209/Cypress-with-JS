{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-30T10:02:49.844Z",
    "end": "2025-03-30T10:03:01.180Z",
    "duration": 11336,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bd39880c-e1de-4736-9630-357ed9ac0453",
      "title": "",
      "fullFile": "e2e\\CypressBySDET\\Part16-DataDrivenTest.cy.js",
      "file": "e2e\\CypressBySDET\\Part16-DataDrivenTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "051481f0-748e-4d66-b091-29344212d060",
          "title": "Mytestsuite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Datadriventest",
              "fullTitle": "Mytestsuite Datadriventest",
              "timedOut": null,
              "duration": 7779,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Data-driven testing: Using a fixture file to load multiple sets of test data\n// A fixture is a static set of data stored in a JSON file to be used for testing\ncy.fixture(\"orangehrm2\").then(data => {\n  cy.visit('https://opensource-demo.orangehrmlive.com/web/index.php/auth/login'); // Navigate to the login page\n  data.forEach(userdata => {\n    // Enter username and password from test data (Using CSS Selectors)\n    cy.get('input[name=\"username\"]').type(userdata.username); // CSS Selector: Attribute-based\n    cy.get('input[name=\"password\"]').type(userdata.password); // CSS Selector: Attribute-based\n    cy.get(\"button[type='submit']\").click(); // CSS Selector: Attribute-based (Button)\n    if (userdata.username == 'Admin' && userdata.password == 'admin123') {\n      // Verify dashboard text for successful login\n      // Using CSS Selector based on class names\n      cy.get(\".oxd-text.oxd-text--h6.oxd-topbar-header-breadcrumb-module\").should('have.text', userdata.expected);\n      // If login is successful, then logout\n      cy.get('.oxd-icon.bi-caret-down-fill.oxd-userdropdown-icon').click(); // Open user dropdown (CSS Selector: Class-based)\n      cy.get(':nth-child(4) > .oxd-userdropdown-link').click(); // Click on logout button (CSS Selector: Child selector)\n    } else {\n      // Show login screen for invalid credentials\n      // Using CSS Selector based on class name to validate error message\n      cy.get(\".oxd-text.oxd-text--p.oxd-alert-content-text\").should(\"have.text\", userdata.expected); // Verify error message\n    }\n  });\n});",
              "err": {
                "message": "TypeError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > Cannot read properties of undefined (reading 'response')\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                "estack": "TypeError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > Cannot read properties of undefined (reading 'response')\n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\n    at <unknown> (https://opensource-demo.orangehrmlive.com/web/dist/js/app.js?v=1721393199309:1:11603)\n    at async Dt.request (https://opensource-demo.orangehrmlive.com/web/dist/js/chunk-vendors.js?v=1721393199309:144:77071)\n    at Dt.request (https://opensource-demo.orangehrmlive.com/web/dist/js/chunk-vendors.js?v=1721393199309:144:77164)",
                "diff": null
              },
              "uuid": "04fbef19-81e5-4bb3-b7d4-d46c705c039d",
              "parentUUID": "051481f0-748e-4d66-b091-29344212d060",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "04fbef19-81e5-4bb3-b7d4-d46c705c039d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7779,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}